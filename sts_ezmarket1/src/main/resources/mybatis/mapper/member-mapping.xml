<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ezmarket.MemberMapper">

	<select id="getMember" resultType="memberdto" parameterType="String">
		select * from member where username = #{username}
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="memberdto">
		insert into member (member_id, username, realname, nickname, password, email, phone, address, join_date) 
		values (#{member_id}, #{username}, #{realname}, #{nickname}, #{password}, #{email, jdbcType=VARCHAR}, #{phone}, #{address}, sysdate)
	</insert>
	
	<!-- 중복확인 -->
	<select id="checkId" resultType="int" parameterType="String"> 
		select count(*) from member where username = #{username}
	</select>
	
	<select id="checkNickname" resultType="int" parameterType="String"> 
		select count(*) from member where nickname = #{nickname}
	</select>
	
	<select id="checkEmail" resultType="int" parameterType="String"> 
		select count(*) from member where email = #{email}
	</select>
	
	<select id="checkPhone" resultType="int" parameterType="String"> 
		select count(*) from member where phone = #{phone}
	</select>
	
    <select id="findIdByEmailOrPhone" resultType="memberdto" parameterType="String">
        select username from member where email = #{emailOrPhone} OR phone = #{emailOrPhone}
    </select>
    
    <select id="findPwByUsernameAndRealnameAndEmailAndPhone" resultType="memberdto" parameterType="map">
        select * from member where username = #{username} and realname = #{realname} and email = #{email} and phone = #{phone}
    </select>
    
    <update id="resetPwOnly" parameterType="map">
        update member set password = #{newPassword} where username = #{username}
    </update> 

	<update id="modifyInfo" parameterType="memberdto">
		update member set password = #{password}, nickname = #{nickname}, address = #{address} where username = #{username}
	</update>
	
	<update id="resignMember" parameterType="memberdto">
		update member set member_status = 'kick', member_kick_comment = '탈퇴한 회원입니다.' where username = #{username}
	</update>
	
	<insert id="sellApplicationSubmit" parameterType="memberdto">
		insert into brand (brand_id, member_id, brandname, brand_number, brand_join_date) values (#{brand_id}, #{member_id}, #{brandname}, #{brand_number}, sysdate)
	</insert>
	
	<update id="sellApplicationAccept" parameterType="memberdto">
		update member set userauthor = 2 where username = #{username};
		update brand set brand_status = '검토 중' where username = #{username};
	</update>
	
	<update id="sellApplicationRefuse" parameterType="memberdto">
		update brand set brand_status = '거절', brand_refusal_comment = #{brand_refusal_comment} where username = #{username};
	</update>
	
	<!-- 수정 전, 강퇴 처리 할 때 사용, kick_comment 설정 -->
	<update id="kickMember" parameterType="memberdto">
		update member set member_status = 'kick', member_kick_comment = #{kick_comment} where username = #{username}
	</update>
	
	<!-- brand table 불러오기 김민수 수정중 -->
	<resultMap type="ezmarket.BrandDTO" id="brand">
		<id property="member_id" column="member_id"/>
		<result property="brand_id" column="brand_id"/>
		
		<association property="memberdto" javaType="ezmarket.MemberDTO">
			<result property="member_id" column="member_id"/>
		</association>
	</resultMap>
	<select id="getBrand" resultMap="brand">
		select br.brand_id
		from brand br join member m on br.member_id = m.member_id
		where br.member_id = #{member_id}
	</select>
	
</mapper>



